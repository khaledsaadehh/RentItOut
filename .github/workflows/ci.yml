name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysqldb:
        image: mysql:8.0.33
        env:
          MYSQL_DATABASE: rentitout
          MYSQL_ROOT_PASSWORD: rentitout
        ports:
          - 3308:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Build and test Docker container
        run: |
          docker-compose -f docker-compose.yml up -d
          sleep 20  # Allow MySQL to fully initialize
          docker-compose exec app npm run test  # Replace with your test command

      - name: Stop and remove containers
        if: always()
        run: docker-compose down

      - name: Upload Docker Image to GitHub Container Registry
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ github.repository }}:latest
